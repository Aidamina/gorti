// Code generated by protoc-gen-go. DO NOT EDIT.
// source: create_federate_execution.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of HLAHandle from types.proto

type LogicalTimeImplementation int32

const (
	LogicalTimeImplementation_HLAfloat64Time   LogicalTimeImplementation = 0
	LogicalTimeImplementation_HLAinteger64Time LogicalTimeImplementation = 1
)

var LogicalTimeImplementation_name = map[int32]string{
	0: "HLAfloat64Time",
	1: "HLAinteger64Time",
}
var LogicalTimeImplementation_value = map[string]int32{
	"HLAfloat64Time":   0,
	"HLAinteger64Time": 1,
}

func (x LogicalTimeImplementation) String() string {
	return proto.EnumName(LogicalTimeImplementation_name, int32(x))
}
func (LogicalTimeImplementation) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type CreateFederateExecutionResponse_CreateFederateExecutionResult int32

const (
	CreateFederateExecutionResponse_SUCCESS                                      CreateFederateExecutionResponse_CreateFederateExecutionResult = 0
	CreateFederateExecutionResponse_COULD_NOT_CREATE_LOGICAL_TIME_IMPLEMENTATION CreateFederateExecutionResponse_CreateFederateExecutionResult = 1
	CreateFederateExecutionResponse_COULD_NOT_LOCATE_FOM_MODULE                  CreateFederateExecutionResponse_CreateFederateExecutionResult = 2
	CreateFederateExecutionResponse_MIM_SHALL_NOT_BE_STANDARD                    CreateFederateExecutionResponse_CreateFederateExecutionResult = 3
	CreateFederateExecutionResponse_INVALID_MIM                                  CreateFederateExecutionResponse_CreateFederateExecutionResult = 4
	CreateFederateExecutionResponse_COULD_NOT_LOCATE_MIM                         CreateFederateExecutionResponse_CreateFederateExecutionResult = 5
	CreateFederateExecutionResponse_EXECUTION_ALREADY_EXISTS                     CreateFederateExecutionResponse_CreateFederateExecutionResult = 6
	CreateFederateExecutionResponse_NOT_CONNECTED                                CreateFederateExecutionResponse_CreateFederateExecutionResult = 7
	CreateFederateExecutionResponse_RTI_INTERNAL_ERROR                           CreateFederateExecutionResponse_CreateFederateExecutionResult = 8
)

var CreateFederateExecutionResponse_CreateFederateExecutionResult_name = map[int32]string{
	0: "SUCCESS",
	1: "COULD_NOT_CREATE_LOGICAL_TIME_IMPLEMENTATION",
	2: "COULD_NOT_LOCATE_FOM_MODULE",
	3: "MIM_SHALL_NOT_BE_STANDARD",
	4: "INVALID_MIM",
	5: "COULD_NOT_LOCATE_MIM",
	6: "EXECUTION_ALREADY_EXISTS",
	7: "NOT_CONNECTED",
	8: "RTI_INTERNAL_ERROR",
}
var CreateFederateExecutionResponse_CreateFederateExecutionResult_value = map[string]int32{
	"SUCCESS": 0,
	"COULD_NOT_CREATE_LOGICAL_TIME_IMPLEMENTATION": 1,
	"COULD_NOT_LOCATE_FOM_MODULE":                  2,
	"MIM_SHALL_NOT_BE_STANDARD":                    3,
	"INVALID_MIM":                                  4,
	"COULD_NOT_LOCATE_MIM":                         5,
	"EXECUTION_ALREADY_EXISTS":                     6,
	"NOT_CONNECTED":                                7,
	"RTI_INTERNAL_ERROR":                           8,
}

func (x CreateFederateExecutionResponse_CreateFederateExecutionResult) String() string {
	return proto.EnumName(CreateFederateExecutionResponse_CreateFederateExecutionResult_name, int32(x))
}
func (CreateFederateExecutionResponse_CreateFederateExecutionResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor1, []int{1, 0}
}

type CreateFederateExecutionRequest struct {
	FederationExecutionName   string                    `protobuf:"bytes,1,opt,name=federation_execution_name,json=federationExecutionName" json:"federation_execution_name,omitempty"`
	FomModuleDesignators      []string                  `protobuf:"bytes,2,rep,name=fom_module_designators,json=fomModuleDesignators" json:"fom_module_designators,omitempty"`
	MimDesignator             string                    `protobuf:"bytes,3,opt,name=mim_designator,json=mimDesignator" json:"mim_designator,omitempty"`
	LogicalTimeImplementation LogicalTimeImplementation `protobuf:"varint,4,opt,name=logical_time_implementation,json=logicalTimeImplementation,enum=api.LogicalTimeImplementation" json:"logical_time_implementation,omitempty"`
}

func (m *CreateFederateExecutionRequest) Reset()                    { *m = CreateFederateExecutionRequest{} }
func (m *CreateFederateExecutionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateFederateExecutionRequest) ProtoMessage()               {}
func (*CreateFederateExecutionRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CreateFederateExecutionRequest) GetFederationExecutionName() string {
	if m != nil {
		return m.FederationExecutionName
	}
	return ""
}

func (m *CreateFederateExecutionRequest) GetFomModuleDesignators() []string {
	if m != nil {
		return m.FomModuleDesignators
	}
	return nil
}

func (m *CreateFederateExecutionRequest) GetMimDesignator() string {
	if m != nil {
		return m.MimDesignator
	}
	return ""
}

func (m *CreateFederateExecutionRequest) GetLogicalTimeImplementation() LogicalTimeImplementation {
	if m != nil {
		return m.LogicalTimeImplementation
	}
	return LogicalTimeImplementation_HLAfloat64Time
}

type CreateFederateExecutionResponse struct {
	Result CreateFederateExecutionResponse_CreateFederateExecutionResult `protobuf:"varint,1,opt,name=result,enum=api.CreateFederateExecutionResponse_CreateFederateExecutionResult" json:"result,omitempty"`
}

func (m *CreateFederateExecutionResponse) Reset()                    { *m = CreateFederateExecutionResponse{} }
func (m *CreateFederateExecutionResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateFederateExecutionResponse) ProtoMessage()               {}
func (*CreateFederateExecutionResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CreateFederateExecutionResponse) GetResult() CreateFederateExecutionResponse_CreateFederateExecutionResult {
	if m != nil {
		return m.Result
	}
	return CreateFederateExecutionResponse_SUCCESS
}

func init() {
	proto.RegisterType((*CreateFederateExecutionRequest)(nil), "api.CreateFederateExecutionRequest")
	proto.RegisterType((*CreateFederateExecutionResponse)(nil), "api.CreateFederateExecutionResponse")
	proto.RegisterEnum("api.LogicalTimeImplementation", LogicalTimeImplementation_name, LogicalTimeImplementation_value)
	proto.RegisterEnum("api.CreateFederateExecutionResponse_CreateFederateExecutionResult", CreateFederateExecutionResponse_CreateFederateExecutionResult_name, CreateFederateExecutionResponse_CreateFederateExecutionResult_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CreateFederateExecutionService service

type CreateFederateExecutionServiceClient interface {
	CreateFederateExecution(ctx context.Context, in *CreateFederateExecutionRequest, opts ...grpc.CallOption) (*CreateFederateExecutionResponse, error)
}

type createFederateExecutionServiceClient struct {
	cc *grpc.ClientConn
}

func NewCreateFederateExecutionServiceClient(cc *grpc.ClientConn) CreateFederateExecutionServiceClient {
	return &createFederateExecutionServiceClient{cc}
}

func (c *createFederateExecutionServiceClient) CreateFederateExecution(ctx context.Context, in *CreateFederateExecutionRequest, opts ...grpc.CallOption) (*CreateFederateExecutionResponse, error) {
	out := new(CreateFederateExecutionResponse)
	err := grpc.Invoke(ctx, "/api.CreateFederateExecutionService/CreateFederateExecution", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CreateFederateExecutionService service

type CreateFederateExecutionServiceServer interface {
	CreateFederateExecution(context.Context, *CreateFederateExecutionRequest) (*CreateFederateExecutionResponse, error)
}

func RegisterCreateFederateExecutionServiceServer(s *grpc.Server, srv CreateFederateExecutionServiceServer) {
	s.RegisterService(&_CreateFederateExecutionService_serviceDesc, srv)
}

func _CreateFederateExecutionService_CreateFederateExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFederateExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateFederateExecutionServiceServer).CreateFederateExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CreateFederateExecutionService/CreateFederateExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateFederateExecutionServiceServer).CreateFederateExecution(ctx, req.(*CreateFederateExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreateFederateExecutionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.CreateFederateExecutionService",
	HandlerType: (*CreateFederateExecutionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFederateExecution",
			Handler:    _CreateFederateExecutionService_CreateFederateExecution_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "create_federate_execution.proto",
}

func init() { proto.RegisterFile("create_federate_execution.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x97, 0x76, 0x6c, 0xcc, 0xd3, 0x4a, 0xb0, 0xa6, 0x2d, 0xdd, 0xd8, 0x1f, 0x15, 0x90,
	0x2a, 0x84, 0x2a, 0x54, 0x26, 0x2e, 0xb8, 0xf3, 0x12, 0x8f, 0x5a, 0x72, 0x92, 0xc9, 0x49, 0xd1,
	0xe0, 0x02, 0x2b, 0xb4, 0xa7, 0x95, 0xa5, 0x38, 0x09, 0x89, 0x8b, 0xe0, 0x05, 0x78, 0x80, 0xdd,
	0xf1, 0xb6, 0xa8, 0x59, 0xa1, 0x20, 0xd4, 0xc2, 0x9d, 0xe5, 0xef, 0xf7, 0x7d, 0xc7, 0xf2, 0x39,
	0x07, 0x9d, 0x8d, 0x4a, 0x48, 0x0c, 0xc8, 0x09, 0x8c, 0xa1, 0x9c, 0x1f, 0xe0, 0x0b, 0x8c, 0x66,
	0x46, 0xe5, 0x59, 0xaf, 0x28, 0x73, 0x93, 0xe3, 0x66, 0x52, 0xa8, 0xa3, 0x5d, 0xf3, 0xb5, 0x80,
	0xea, 0xee, 0xa6, 0xf3, 0xbd, 0x81, 0x4e, 0xdd, 0xda, 0x75, 0xb5, 0x30, 0xd1, 0x9f, 0x1e, 0x01,
	0x9f, 0x66, 0x50, 0x19, 0xfc, 0x1a, 0xb5, 0x17, 0x81, 0x2a, 0xcf, 0x96, 0x91, 0x32, 0x4b, 0x34,
	0x38, 0xd6, 0xb9, 0xd5, 0xdd, 0x11, 0x87, 0x4b, 0xe0, 0x97, 0x3d, 0x48, 0x34, 0xe0, 0x0b, 0x74,
	0x30, 0xc9, 0xb5, 0xd4, 0xf9, 0x78, 0x96, 0x82, 0x1c, 0x43, 0xa5, 0xa6, 0x59, 0x62, 0xf2, 0xb2,
	0x72, 0x1a, 0xe7, 0xcd, 0xee, 0x8e, 0xd8, 0x9f, 0xe4, 0xda, 0xaf, 0x45, 0x6f, 0xa9, 0xe1, 0xa7,
	0xa8, 0xa5, 0x95, 0xfe, 0x0d, 0x77, 0x9a, 0x75, 0x99, 0x3d, 0xad, 0xf4, 0x92, 0xc3, 0x1f, 0xd0,
	0x71, 0x9a, 0x4f, 0xd5, 0x28, 0x49, 0xa5, 0x51, 0x1a, 0xa4, 0xd2, 0x45, 0x0a, 0x1a, 0x32, 0x53,
	0x3f, 0xc4, 0xd9, 0x3c, 0xb7, 0xba, 0xad, 0xfe, 0x69, 0x2f, 0x29, 0x54, 0x8f, 0xdf, 0x71, 0xb1,
	0xd2, 0xc0, 0xfe, 0xa0, 0x44, 0x3b, 0x5d, 0x25, 0x75, 0x6e, 0x9b, 0xe8, 0x6c, 0xe5, 0xdf, 0x54,
	0x45, 0x9e, 0x55, 0x80, 0xdf, 0xa3, 0xad, 0x12, 0xaa, 0x59, 0x6a, 0xea, 0x9f, 0x68, 0xf5, 0x2f,
	0xeb, 0x72, 0xff, 0x70, 0xad, 0xd1, 0x67, 0xa9, 0x11, 0x8b, 0xc4, 0xce, 0x6d, 0x03, 0x9d, 0xac,
	0x25, 0xf1, 0x2e, 0xda, 0x8e, 0x86, 0xae, 0x4b, 0xa3, 0xc8, 0xde, 0xc0, 0x2f, 0xd0, 0x73, 0x37,
	0x1c, 0x72, 0x4f, 0x06, 0x61, 0x2c, 0x5d, 0x41, 0x49, 0x4c, 0x25, 0x0f, 0xdf, 0x30, 0x97, 0x70,
	0x19, 0x33, 0x9f, 0x4a, 0xe6, 0x5f, 0x73, 0xea, 0xd3, 0x20, 0x26, 0x31, 0x0b, 0x03, 0xdb, 0xc2,
	0x67, 0xe8, 0x78, 0xe9, 0xe0, 0xa1, 0x3b, 0x77, 0x5c, 0x85, 0xbe, 0xf4, 0x43, 0x6f, 0xc8, 0xa9,
	0xdd, 0xc0, 0x27, 0xa8, 0xed, 0x33, 0x5f, 0x46, 0x03, 0xc2, 0x79, 0x0d, 0x5d, 0x52, 0x19, 0xc5,
	0x24, 0xf0, 0x88, 0xf0, 0xec, 0x26, 0x7e, 0x80, 0x76, 0x59, 0xf0, 0x96, 0x70, 0xe6, 0x49, 0x9f,
	0xf9, 0xf6, 0x26, 0x76, 0xd0, 0xfe, 0x5f, 0x81, 0x73, 0xe5, 0x1e, 0x7e, 0x84, 0x1c, 0x7a, 0x43,
	0xdd, 0xe1, 0xbc, 0xb2, 0x24, 0x5c, 0x50, 0xe2, 0xbd, 0x93, 0xf4, 0x86, 0x45, 0x71, 0x64, 0x6f,
	0xe1, 0x87, 0x68, 0xaf, 0x7e, 0x74, 0x18, 0x04, 0xd4, 0x8d, 0xa9, 0x67, 0x6f, 0xe3, 0x03, 0x84,
	0x45, 0xcc, 0x24, 0x0b, 0x62, 0x2a, 0x02, 0xc2, 0x25, 0x15, 0x22, 0x14, 0xf6, 0xfd, 0x67, 0x14,
	0xb5, 0x57, 0x36, 0x13, 0x63, 0xd4, 0x1a, 0x70, 0x32, 0x49, 0xf3, 0xc4, 0xbc, 0xba, 0x98, 0xeb,
	0xf6, 0x06, 0xde, 0x47, 0xf6, 0x80, 0x13, 0x95, 0x19, 0x98, 0x42, 0xb9, 0xb8, 0xb5, 0xfa, 0xdf,
	0xac, 0x95, 0x73, 0x1f, 0x41, 0xf9, 0x59, 0x8d, 0x00, 0x8f, 0xd1, 0xe1, 0x0a, 0x02, 0x3f, 0x5e,
	0xdf, 0xe5, 0x7a, 0x6f, 0x8e, 0x9e, 0xfc, 0xcf, 0x28, 0x5c, 0x6f, 0x7c, 0xdc, 0xaa, 0x37, 0xf1,
	0xe5, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x4f, 0xf6, 0x09, 0xbe, 0x03, 0x00, 0x00,
}
